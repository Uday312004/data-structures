class Node:
  def __init__(self,data):
    self.data=data
    self.next=None
    self.prev=None
class CircularDoubleLinkedList:
  def __init__(self):
    self.head=None
    self.tail=None
    self.head.next=self.tail
    self.tail.next=self.head
    
    
  def addNode(self,data):
    newNode=Node(data)
    if self.head is None:
      self.head=newNode
      self.tail-newNode
      newNode.next=self.head
    else:
      self.tail.next=newNode
      self.tail=newNode
      self.tail.next=self.head
  def insertbegin(self,data):
    newNode=Node(data)
    newNode.next=self.head
    self.head.prev=newNode
    newNode.prev=self.tail
    self.tail.next=newNode
  def display(self):
    current=self.head
    while current.next is not self.head:
      print(current.data)
      current=current.next
    print(current.data)
a=CircularDoubleLinkedList()
a.addNode(20)
a.addNode(30)
a.addNode(40)
a.insertbegin(10)
a.display()
